<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd">
<language
    name=        "Shar"
    section=     "Sources"
    extensions=  "*.shar"
    version=     "0.1"
    kateversion= "5.0">

    <highlighting>
        <list name="Operators">
            <item>case</item>
            <item>catch</item>
            <item>default</item>
            <item>eSwitch</item>
            <item>elif</item>
            <item>else</item>
            <item>end</item>
            <item>fallthrough</item>
            <item>for</item>
            <item>gParse</item>
            <item>if</item>
            <item>next</item>
            <item>parse</item>
            <item>return</item>
            <item>select</item>
            <item>switch</item>
            <item>tSwitch</item>
            <item>try</item>
        </list>

        <contexts>
            <context name="Main" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="^module " context="Module" attribute="MainID"/>
                <RegExpr String="^(export )?const\b" context="Constant" attribute="MainID"/>
                <RegExpr String="^(export )?(type|primitive)\b" context="Type" attribute="MainID"/>
                <RegExpr String="^(export )?enum\b" context="Enum" attribute="MainID"/>
                <RegExpr String="^(export )?group\b" context="Group" attribute="MainID"/>
                <RegExpr String="^(export )?def\b" context="Function" attribute="MainID"/>
                <RegExpr String="^attach\b" context="Attach" attribute="MainID"/>
                <RegExpr String="^#" context="FunctionAttributes" lookAhead="true"/>
            </context>

            <context name="EndLineComment" attribute="Comment" lineEndContext="#pop"/>

            <context  name="InlineComment" attribute="Comment" lineEndContext="#pop">
                <Detect2Chars char="*" char1="/" attribute="Comment" context="#pop" endRegion="Comment"/>
            </context>

            <context name="Module" attribute="Normal" lineEndContext="#pop">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="ModuleName"/>
                <RegExpr String="\{$" context="MLModule"/>
            </context>

            <context name="MLModule" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="ModuleName"/>
                <RegExpr String="^[ \t]*\}$" context="#pop"/>
            </context>

            <context name="Constant" attribute="Normal" lineEndContext="#pop">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <DetectChar char="&quot;" attribute="String" context="String"/>
                <DetectChar char="'" attribute="Char" context="Char"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\?|\!)?" attribute="Normal"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="\b(const|enum)?::" attribute="Own"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <Float attribute="Float"/>
                <Int attribute="Int"/>
                <RegExpr String="\b(false|true)\b" attribute="Bool"/>
                <WordDetect String="nothing" attribute="Nothing"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="\{$" context="MLConstant"/>
            </context>

            <context name="MLConstant" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <DetectChar char="&quot;" attribute="String" context="String"/>
                <DetectChar char="'" attribute="Char" context="Char"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\?|\!)?" attribute="Normal"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="\b(const|enum)?::" attribute="Own"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <Float attribute="Float"/>
                <Int attribute="Int"/>
                <RegExpr String="\b(false|true)\b" attribute="Bool"/>
                <WordDetect String="nothing" attribute="Nothing"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="^[ \t]*\}$" context="#pop"/>
            </context>

            <context name="String" attribute="String" lineEndContext="#pop">
                <DetectChar char="&quot;" attribute="String" context="#pop"/>
                <RegExpr String="\\(n|t|q|a|\\|[0-9a-fA-F]{4})" attribute="String Char"/>
            </context>

            <context name="Char" attribute="Char" lineEndContext="#pop">
                <DetectChar char="'" attribute="Char" context="#pop"/>
                <RegExpr String="\\(n|t|q|a|\\|[0-9a-fA-F]{4})" attribute="String Char"/>
            </context>

            <context name="Type" attribute="Normal" lineEndContext="#pop">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="\{$" context="MLType"/>
            </context>

            <context name="MLType" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="^[ \t]*\}$" context="#pop"/>
            </context>

            <context name="Enum" attribute="Normal" lineEndContext="EnumItems">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
            </context>

            <context name="EnumItems" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="^ {0,3}[^ ]" context="#pop#pop" lookAhead="true"/>
            </context>

            <context name="Group" attribute="Normal" lineEndContext="GroupFunctions">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="\{$" context="MLGroup"/>
            </context>

            <context name="MLGroup" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="^[ \t]*\}$" context="#pop"/>
            </context>

            <context name="GroupFunctions" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="^ {0,3}[^ ]" context="#pop#pop" lookAhead="true"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <RegExpr String="\b(write|noread)\b" attribute="Modifiers"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="\{$" context="MLGroupFunctions"/>
            </context>

            <context name="MLGroupFunctions" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <RegExpr String="\b(write|noread)\b" attribute="Modifiers"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="^[ \t]*\}$" context="#pop"/>
            </context>

            <context name="Function" attribute="Normal" lineEndContext="llvmID_OR_Code">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <WordDetect String="def" attribute="MainID"/>
                <RegExpr String="\b(write|noread)\b" attribute="Modifiers"/>
                <RegExpr String="\{$" context="MLFunction"/>
            </context>

            <context name="MLFunction" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <WordDetect String="def" attribute="MainID"/>
                <RegExpr String="\b(write|noread)\b" attribute="Modifiers"/>
                <RegExpr String="^[ \t]*\}$" context="#pop"/>
            </context>

            <context name="llvmID_OR_Code" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="^ {0,3}[^ ]" context="#pop#pop" lookAhead="true"/>
                <RegExpr String="^ {4}llvm\b" context="LLVMID" lookAhead="true"/>
                <RegExpr String="^ {4}\S" context="Code" lookAhead="true"/>
            </context>

            <context name="Code" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="^ {0,3}[^ ]" context="#pop#pop#pop" lookAhead="true"/>
                <RegExpr String="^ {4,}(const|var) " attribute="MainID"/>
                <DetectChar char="&quot;" attribute="String" context="String"/>
                <DetectChar char="'" attribute="Char" context="Char"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\?|\!)?" attribute="Normal"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="\b(const|enum)?::" attribute="Own"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <Float attribute="Float"/>
                <Int attribute="Int"/>
                <RegExpr String="^ {4,}inthrow\b" attribute="ControlFlow"/>
                <RegExpr String="^ {4,}nothrow\b" attribute="ControlFlow"/>
                <keyword String="Operators" attribute="ControlFlow"/>
                <RegExpr String="\b(false|true)\b" attribute="Bool"/>
                <WordDetect String="nothing" attribute="Nothing"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="\b(write|noread)\b" attribute="Modifiers"/>
                <RegExpr String="\{$" context="MLCode"/>
            </context>

            <context name="MLCode" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <DetectChar char="&quot;" attribute="String" context="String"/>
                <DetectChar char="'" attribute="Char" context="Char"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\?|\!)?" attribute="Normal"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="\b(const|enum)?::" attribute="Own"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <Float attribute="Float"/>
                <Int attribute="Int"/>
                <RegExpr String="^ {4,}inthrow\b" attribute="ControlFlow"/>
                <RegExpr String="^ {4,}nothrow\b" attribute="ControlFlow"/>
                <keyword String="Operators" attribute="ControlFlow"/>
                <RegExpr String="\b(false|true)\b" attribute="Bool"/>
                <WordDetect String="nothing" attribute="Nothing"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="\b(write|noread)\b" attribute="Modifiers"/>
                <RegExpr String="^[ \t]*\}$" context="#pop"/>
            </context>

            <context name="LLVMID" attribute="MainID" lineEndContext="LLVMCode">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
            </context>

            <context name="LLVMCode" attribute="Normal">
                <RegExpr String="^ {0,7}[^ ]" context="#pop#pop#pop#pop" lookAhead="true"/>
                <IncludeRules context="llvm##LLVM"/>
            </context>

            <context name="Attach" attribute="Normal" lineEndContext="AttachFunctions">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <WordDetect String=" to " attribute="MainID"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="\{$" context="MLAttach"/>
            </context>

            <context name="MLAttach" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <WordDetect String=" to " attribute="MainID"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="^[ \t]*\}$" context="#pop"/>
            </context>

            <context name="AttachFunctions" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="^ {0,3}[^ ]" context="#pop#pop" lookAhead="true"/>
                <RegExpr String="^ {4}#" context="FunctionAttributes" lookAhead="true"/>
                <RegExpr String="^ {4}def\b" context="FunctionInAttach" attribute="MainID"/>
            </context>

            <context name="FunctionInAttach" attribute="Normal" lineEndContext="llvmID_OR_Code_InAttach">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="\b(write|noread)\b" attribute="Modifiers"/>
                <RegExpr String="\{$" context="MLFunctionInAttach"/>
            </context>

            <context name="llvmID_OR_Code_InAttach" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="^ {0,7}[^ ]" context="#pop#pop" lookAhead="true"/>
                <RegExpr String="^ {8}llvm\b" context="LLVMIDInAttach" lookAhead="true"/>
                <RegExpr String="^ {8}\S" context="CodeInAttach" lookAhead="true"/>
            </context>

            <context name="CodeInAttach" attribute="Normal">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
                <RegExpr String="^ {0,7}[^ ]" context="#pop#pop#pop" lookAhead="true"/>
                <RegExpr String="^ {8,}(const|var) " attribute="MainID"/>
                <DetectChar char="&quot;" attribute="String" context="String"/>
                <DetectChar char="'" attribute="Char" context="Char"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="(?&lt;=\.)[a-z][a-zA-Z0-9_]*(\?|\!)?" attribute="Normal"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*(?=::)" attribute="ModuleName"/>
                <RegExpr String="[a-z][a-zA-Z0-9_]*(\~|\`)" attribute="FieldFunction"/>
                <RegExpr String="\b(const|enum)?::" attribute="Own"/>
                <Detect2Chars char=":" char1=":" attribute="Own"/>
                <Float attribute="Float"/>
                <Int attribute="Int"/>
                <RegExpr String="^ {4,}inthrow\b" attribute="ControlFlow"/>
                <RegExpr String="^ {4,}nothrow\b" attribute="ControlFlow"/>
                <keyword String="Operators" attribute="ControlFlow"/>
                <RegExpr String="\b(false|true)\b" attribute="Bool"/>
                <WordDetect String="nothing" attribute="Nothing"/>
                <RegExpr String="\b[A-Z][a-zA-Z0-9_]*" attribute="TypeName"/>
                <RegExpr String="\b(write|noread)\b" attribute="Modifiers"/>
                <RegExpr String="\{$" context="MLCode"/>
            </context>

            <context name="LLVMIDInAttach" attribute="MainID" lineEndContext="LLVMCodeInAttach">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
            </context>

            <context name="LLVMCodeInAttach" attribute="Normal">
                <RegExpr String="^ {0,11}[^ ]" context="#pop#pop#pop#pop" lookAhead="true"/>
                <IncludeRules context="llvm##LLVM"/>
            </context>

            <context name="FunctionAttributes" attribute="FunctionAttribute" lineEndContext="#pop">
                <Detect2Chars char="/" char1="/" attribute="Comment" context="EndLineComment"/>
                <Detect2Chars char="/" char1="*" attribute="Comment" context="InlineComment" beginRegion="Comment"/>
            </context>
        </contexts>
        <itemDatas>
            <itemData name="Bool"                    defStyleNum="dsBaseN"       spellChecking="false"/>
            <itemData name="Char"                    defStyleNum="dsChar"        spellChecking="false"/>
            <itemData name="Comment"                 defStyleNum="dsComment"     spellChecking="true" />
            <itemData name="FieldFunction"           defStyleNum="dsVariable"    spellChecking="false"/>
            <itemData name="Float"                   defStyleNum="dsFloat"       spellChecking="false"/>
            <itemData name="FunctionAttribute"       defStyleNum="dsAttribute"   spellChecking="false"/>
            <itemData name="Int"                     defStyleNum="dsDecVal"      spellChecking="false"/>
            <itemData name="MainID"                  defStyleNum="dsKeyword"     spellChecking="false"/>
            <itemData name="Modifiers"               defStyleNum="dsAnnotation"  spellChecking="false"/>
            <itemData name="ModuleName"              defStyleNum="dsImport"      spellChecking="false"/>
            <itemData name="Normal"                  defStyleNum="dsNormal"      spellChecking="false"/>
            <itemData name="Nothing"                 defStyleNum="dsBuiltIn"     spellChecking="false"/>
            <itemData name="ControlFlow"             defStyleNum="dsControlFlow" spellChecking="false"/>
            <itemData name="Own"                     defStyleNum="dsImport"      spellChecking="false"/>
            <itemData name="String Char"             defStyleNum="dsSpecialChar" spellChecking="false"/>
            <itemData name="String"                  defStyleNum="dsString"      spellChecking="false"/>
            <itemData name="TypeName"                defStyleNum="dsDataType"    spellChecking="false"/>
        </itemDatas>
    </highlighting>
    <general>
        <folding indentationsensitive="1"/>
        <comments>
            <comment name="singleLine" start="//"/>
        </comments>
    </general>
</language>
